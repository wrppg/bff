name: Build - LADB

on:
  workflow_dispatch:

env:
  FLAV: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "tytydraco/LADB"
          ref: "main"

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Change versionCode To Max INT
        run: |
          BUILD_GRADLE=$(find app -maxdepth 1 \( -name 'build.gradle' -or -name 'build.gradle.kts' \) -print -quit)
          ### Do this because some use ```versionName = versionCode.toString()``` ###
          OLD_VER_CODE=$(awk '/^\s*versionCode/ {print $NF; exit}' $BUILD_GRADLE)
          sed -E "/^\s*versionName/s/versionCode\.toString\(\)/\"${OLD_VER_CODE}\"/" -i $BUILD_GRADLE
          ###
          sed -E '/^\s*versionCode/s/[0-9]+$/2147483647/' -i $BUILD_GRADLE

      - name: Change app and package name
        run: |
          BUILD_GRADLE=$(find app -maxdepth 1 \( -name 'build.gradle' -or -name 'build.gradle.kts' \) -print -quit)
          APP_ID=$(awk -F '"' '/applicationId( |=)/ {print $2; exit}' $BUILD_GRADLE)
          APP_NAME=$(awk -F'[<>]' '/name="app_name"/ {print $3}' app/src/main/res/values/strings.xml)
          APP_NAME="${APP_NAME// /}"
          NEW_APP_ID="bff.${APP_NAME,,}"
          sed -E "/applicationId( |=)/s|${APP_ID}|${NEW_APP_ID}|" -i $BUILD_GRADLE
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV

          # sed -E '/applicationId( |=)/s|com\.draco\.ladb|bff.ladb|' -i app/build.gradle
          # sed -E '/app_name/s|LADB|LADB-|' -i app/src/main/res/values/strings.xml

      - name: Remove Pre-defined APK Name
        run: |
          BUILD_GRADLE=$(find app -maxdepth 1 \( -name 'build.gradle' -or -name 'build.gradle.kts' \) -print -quit)
          sed -E '/archives(Base)*Name/d' -i $BUILD_GRADLE

      - name: Build release APK
        env:
          RELEASE_ANTIPIRACY: false
        run: |
          chmod +x ./gradlew
          ./gradlew :app:assemble${FLAV^}Release

      - name: List APKs
        run: find app -name '*.apk'

      - name: Set Env
        run: |
          APK_PATH_PREFIX="app/build/outputs/apk/${FLAV:+$FLAV/}release"
          # APK_UNSIGNED_NAME="app${FLAV:+"-$FLAV"}-release-unsigned.apk"
          APK_FILE=$(find ${APK_PATH_PREFIX} \( -iname "app${FLAV:+"-$FLAV"}-release-unsigned.apk" -o -iname "app${FLAV:+"-$FLAV"}-release.apk" -o -iname '*arm64-v8*' \) -print -quit)
          echo "APK_PATH_PREFIX=${APK_PATH_PREFIX}" >> $GITHUB_ENV
          echo "APK_UNSIGNED_NAME=${APK_UNSIGNED_NAME}" >> $GITHUB_ENV
          echo "APK_FILE=${APK_FILE}" >> $GITHUB_ENV

      - name: Sign APK
        env:
          KEYSTORE: ${{ secrets.SIGNING_KEY }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          echo "${KEYSTORE}" | base64 -d > apksign.keystore
          versionName=$( jq -r '.elements[0].versionName' ${APK_PATH_PREFIX}/output-metadata.json )
          # APK_UNSIGNED_NAME="app${FLAV:+"-$FLAV"}-release-unsigned.apk"
          # ${ANDROID_HOME}/build-tools/36.0.0/apksigner sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD ${APK_PATH_PREFIX}/${APK_UNSIGNED_NAME}

          for apk in ${APK_PATH_PREFIX}/*.apk; do ${ANDROID_HOME}/build-tools/36.0.0/apksigner sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD $apk; done

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_APK_REPO }}
          # GH_TOKEN: ${{ github.token }}
        run: |
          versionName=$( jq -r '.elements[0].versionName' ${APK_PATH_PREFIX}/output-metadata.json )
          # APK_UNSIGNED_NAME="app${FLAV:+"-$FLAV"}-release-unsigned.apk"
          # mv ${APK_PATH_PREFIX}/${APK_UNSIGNED_NAME} ${APK_PATH_PREFIX}/${APP_NAME}_${versionName}.apk
          mv ${APK_FILE} ${APK_PATH_PREFIX}/${APP_NAME}_${versionName}.apk
          gh release create "${versionName}-${APP_NAME}" --title "${APP_NAME} ${versionName}" --repo wrppg/apk ${APK_PATH_PREFIX}/*.apk --notes $'Automate build\n'"update to ${versionName}"

          # gh release upload "${versionName}-${APP_NAME}" ${APK_PATH_PREFIX}/*.apk
