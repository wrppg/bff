name: Build - LADB

on:
  workflow_dispatch:

env:
  APP_NAME: "LADB"
  APK_PATH_PREFIX: 'app/build/outputs/apk/release'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "tytydraco/LADB"
          ref: "main"

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      # - name: Change app and package name
      #   run: |
      #     sed -E '/app_name/s|LADB|LADB-|' -i app/src/main/res/values/strings.xml
      #     sed -E '/applicationId/s|com\.draco\.ladb|com.draco.ladb_|' -i app/build.gradle

      - name: Build release APK
        env: 
          RELEASE_ANTIPIRACY: false
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      # # Extract version name from build.gradle
      # - name: Extract version name
      #   id: extract_version
      #   run: |
      #     VERSION_NAME=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '"')
      #     echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
      #     echo "Extracted version: $VERSION_NAME"

      - name: Sign APK
        env:
          KEYSTORE: ${{ secrets.SIGNING_KEY }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          echo "${KEYSTORE}" | base64 -d > apksign.keystore
          versionName=$( jq -r '.elements[0].versionName' app/build/outputs/apk/release/output-metadata.json )
          for apk in ${APK_PATH_PREFIX}/*.apk; do ${ANDROID_HOME}/build-tools/34.0.0/apksigner sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD $apk; done

      - name: Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          versionName=$( jq -r '.elements[0].versionName' ${APK_PATH_PREFIX}/output-metadata.json )
          mv ${APK_PATH_PREFIX}/app-release-unsigned.apk ${APK_PATH_PREFIX}/${APP_NAME}-${versionName}.apk
          gh release create "${versionName}-${APP_NAME}" --title "${APP_NAME} ${versionName}" --draft --repo wrppg/bff ${APK_PATH_PREFIX}/*.apk
          # gh release upload "${versionName}-${APP_NAME}" ${APK_PATH_PREFIX}/*.apk
