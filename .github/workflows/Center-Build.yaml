name: Center - Build

on:
  workflow_dispatch:
    inputs:
      repo:
        required: true
        type: string
      ref:
        required: true
        type: string
        default: 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Run script
        env:
          KEYSTORE: ${{ secrets.SIGNING_KEY }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          curl -sL https://raw.githubusercontent.com/wrppg/bff/refs/heads/main/run.sh | bash -s -- ${{ github.event.inputs.repo }}

      - name: Check env
        run: |
          echo "APP_NAME=$APP_NAME"
          echo "FLAV=$FLAV"

      - run: yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Build APK
        run: |
          chmod +x ./gradlew
          ./gradlew :app:assemble${FLAV^}Release

      - name: List apks
        run: |
          find app/build/outputs/apk/ -name '*.apk' -exec echo 'âœ…' {} \;
          
      - name: Sign APK
        env:
          KEYSTORE: ${{ secrets.SIGNING_KEY }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          echo "${KEYSTORE}" | base64 -d > apksign.keystore
          find app/build/outputs/apk/ -name '*.apk' -exec \
          ${ANDROID_HOME}/build-tools/36.0.0/apksigner \
          sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD {} \;

      - name: rename apk
        run: |
          APK_DIR=$(find app/build/outputs/apk/ -name '*.apk' -print -quit)
          APK_DIR=$(dirname $APK_DIR)
          VER_NAME=$(jq -r '.elements[0].versionName' ${APK_DIR}/output-metadata.json)
          
          for apk in "$APK_DIR"/*.apk; do
            if [[ $apk =~ ${APP_NAME} ]]; then
              break;
            fi
            RENAME_APK=$(sed -E "s/(app-[^-]+)(.*)/\1-${VER_NAME}\2/" <<< "$apk")
            RENAME_APK=${RENAME_APK/app-/${APP_NAME}-}
            RENAME_APK=${RENAME_APK/-unsigned/}
            if ! [[ $apk == ${RENAME_APK} ]]; then
              mv $apk ${RENAME_APK}
            fi
          done

          echo "VER_NAME=${VER_NAME}" >> $GITHUB_ENV
          echo "APK_DIR=${APK_DIR}" >> $GITHUB_ENV
      
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_APK_REPO }}
          # GH_TOKEN: ${{ github.token }}
        run: |
          APP_FLAV_NAME="${APP_NAME}${FLAV:+"-$FLAV"}"
          gh release create "${VER_NAME}-${APP_FLAV_NAME}" --title "${APP_FLAV_NAME} ${VER_NAME}" --repo wrppg/apk ${APK_DIR}/*.apk --notes $'Automate build\n'"update to ${VER_NAME}"

          # gh release upload "${versionName}-${APP_FLAV_NAME}" ${APK_PATH_PREFIX}/*.apk
      
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          path: 'bff'

      - run: |
          cd bff
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-action[bot]"
          sed -E "/${APP_NAME}/s/^[0-9]+/${VER_CODE}/" -i app_record.txt
          git commit -m "update app_record.txt"
          git push
