name: Build - RootActivityLauncher

on:
  workflow_dispatch:

env:
  APP_NAME: "RootActivityLauncher"
  APK_PATH_PREFIX: 'app/build/outputs/apk/release'
  
jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 
      with:
          repository: 'zacharee/RootActivityLauncher'
          ref: 'master'

    - name: Set up JDK 17
      uses: actions/setup-java@v4 # Set up Java Development Kit
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle' # Cache Gradle dependencies to speed up builds

    - name: Download and Install Modified Android JARs
      env:
        API_LEVEL: 35
      run: |
        # see https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
        # for pre-defined Environment variables (i.e. ANDROID_HOME, ANDROID_SDK_ROOT)
        
        TARGET_DIR="$ANDROID_SDK_ROOT/platforms/android-$API_LEVEL"

        # Create the target directory if it doesn't exist
        mkdir -p "$TARGET_DIR" || { echo "Failed to create directory $TARGET_DIR"; exit 1; }

        # Download the modified android.jar from Reginer/aosp-android-jar
        curl -L -o "$TARGET_DIR/android.jar" "https://github.com/Reginer/aosp-android-jar/raw/refs/heads/main/android-$API_LEVEL/android.jar"
        [[ $? -ne 0 ]] && exit 1
        echo "android.jar downloaded successfully."

    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew :app:assembleRelease

    - name: List APKs
      run: find . -name '*.apk'
      
    # - name: Upload APK artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: RootActivityLauncher-APK                 # Name of the artifact
    #     path: app/build/outputs/apk/release/*.apk     # Path to the release APK files
    #     retention-days: 5                             # Keep the artifact for 5 days

    - name: Sign APK
      env:
        KEYSTORE: ${{ secrets.SIGNING_KEY }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      run: |
        versionName=$( jq -r '.elements[0].versionName' app/build/outputs/apk/release/output-metadata.json )
        echo "${KEYSTORE}" | base64 -d > apksign.keystore
        for apk in ${APK_PATH_PREFIX}/*.apk; do ${ANDROID_HOME}/build-tools/34.0.0/apksigner sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD $apk; done

    - name: Release
      env:
        GH_TOKEN: ${{ secrets.GH_APK_REPO }}
        # GH_TOKEN: ${{ github.token }}
      run: |
        versionName=$( jq -r '.elements[0].versionName' ${APK_PATH_PREFIX}/output-metadata.json )
        gh release create "${versionName}-${APP_NAME}" --title "${APP_NAME} ${versionName}" --draft --repo wrppg/apk ${APK_PATH_PREFIX}/*.apk
        # gh release upload "${versionName}-${APP_NAME}" ${APK_PATH_PREFIX}/*.apk

